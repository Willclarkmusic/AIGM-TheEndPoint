rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the resource
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // USERS COLLECTION - Allow full access to own user document
    match /users/{userId} {
      allow read, write, create, update, delete: if isOwner(userId);
    }

    // SERVERS COLLECTION - More permissive for development
    match /servers/{serverId} {
      // Allow authenticated users to read all servers (needed for join by code)
      allow read: if isAuthenticated();
      // Allow authenticated users to create servers
      allow create: if isAuthenticated();
      // Allow server owners to update/delete (check ownerIds array)
      allow update, delete: if isAuthenticated() && 
                            request.auth.uid in resource.data.ownerIds;
      
      // SERVER MEMBERS SUBCOLLECTION - Very permissive for development
      match /members/{memberId} {
        // Allow authenticated users to read all member documents (needed for collectionGroup queries)
        allow read: if isAuthenticated();
        // Allow authenticated users to create member documents (for joining servers)
        allow create: if isAuthenticated();
        // Allow users to update/delete their own membership
        allow update, delete: if isAuthenticated() && 
                              (request.auth.uid == memberId || 
                               request.auth.uid in get(/databases/$(database)/documents/servers/$(serverId)).data.ownerIds);
      }
      
      // CHAT ROOMS SUBCOLLECTION - Permissive for development
      match /chat_rooms/{roomId} {
        allow read: if isAuthenticated();
        allow create: if isAuthenticated();
        allow update, delete: if isAuthenticated() && 
                              request.auth.uid in get(/databases/$(database)/documents/servers/$(serverId)).data.ownerIds;
        
        // MESSAGES SUBCOLLECTION
        match /messages/{messageId} {
          allow read: if isAuthenticated();
          allow create: if isAuthenticated();
          allow update: if false; // Messages cannot be edited
          allow delete: if isAuthenticated() && 
                       (resource.data.senderId == request.auth.uid ||
                        request.auth.uid in get(/databases/$(database)/documents/servers/$(serverId)).data.ownerIds);
        }
      }
    }

    // PRIVATE MESSAGES COLLECTION
    match /private_messages/{pmId} {
      allow read, write: if isAuthenticated() && 
                        request.auth.uid in resource.data.participants;
      allow create: if isAuthenticated() && 
                   request.auth.uid in request.resource.data.participants &&
                   request.resource.data.participants.size() <= 20;
      
      match /messages/{messageId} {
        allow read: if isAuthenticated() && 
                   request.auth.uid in get(/databases/$(database)/documents/private_messages/$(pmId)).data.participants;
        allow create: if isAuthenticated() && 
                     request.auth.uid in get(/databases/$(database)/documents/private_messages/$(pmId)).data.participants;
        allow update: if false;
        allow delete: if isAuthenticated() && resource.data.senderId == request.auth.uid;
      }
    }

    // AI AGENTS COLLECTION
    match /ai_agents/{agentId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && 
                           resource.data.creatorId == request.auth.uid;
    }

    // SOCIAL FEED COLLECTION
    match /social_feed/{postId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && 
                           resource.data.author == request.auth.uid;
    }

    // FRIEND REQUESTS COLLECTION
    match /friend_requests/{requestId} {
      allow read, write: if isAuthenticated();
      allow create: if isAuthenticated();
    }

    // Default allow for development - REMOVE IN PRODUCTION
    match /{document=**} {
      allow read, write: if isAuthenticated();
    }
  }
}